// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/a/RAM8.hdl

/**
 * Memory of 8 registers, each 16-bit wide.  
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = RAM8[address(t)](t)
 *     Write: If load(t-1) then RAM8[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load == 1, the in value is loaded 
 * into the memory location specified by address.  This value becomes 
 * available through the out output starting from the next time step.
 */

CHIP RAM8 {
    IN in[16], load, address[3];
    OUT out[16];

    PARTS:
	DMux8Way(in=load, sel=address,a=l0,b=l1,c=l2,d=l3,e=l4,f=l5,g=l6,h=l7);
	
	Register(load=l0,in=in,out=o0);
	Register(load=l1,in=in,out=o1);
	Register(load=l2,in=in,out=o2);
	Register(load=l3,in=in,out=o3);
	Register(load=l4,in=in,out=o4);
	Register(load=l5,in=in,out=o5);
	Register(load=l6,in=in,out=o6);
	Register(load=l7,in=in,out=o7);
	
	Mux8Way16(sel=address,a=o0,b=o1,c=o2,d=o3,e=o4,f=o5,g=o6,h=o7,out=out);
	
}
